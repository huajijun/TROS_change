riscv64-ls-elf-gcc -nostartfiles -nostdlib stage0.S main.c heap2.c  common.c list2.c para.S  queue2.c  task.c time.c -Tlink.ld -o test
In file included from main.c:2:
main.c: In function ‘vSyscallInit’:
queue2.h:51:51: warning: implicit declaration of function ‘xQueueGenericCreate’; did you mean ‘xQueueCreate’? [-Wimplicit-function-declaration]
   51 | #define xQueueCreate( uxQueueLength, uxItemSize ) xQueueGenericCreate( uxQueueLength, uxItemSize, queueQUEUE_TYPE_BASE )
      |                                                   ^~~~~~~~~~~~~~~~~~~
main.c:12:15: note: in expansion of macro ‘xQueueCreate’
   12 |  xTestQueue = xQueueCreate( bktQUEUE_LENGTH, sizeof( BaseType_t ) );
      |               ^~~~~~~~~~~~
main.c:12:13: warning: assignment to ‘QueueHandle_t’ {aka ‘void *’} from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
   12 |  xTestQueue = xQueueCreate( bktQUEUE_LENGTH, sizeof( BaseType_t ) );
      |             ^
In file included from main.c:2:
queue2.h:31:57: warning: implicit declaration of function ‘xQueueGenericReceive’; did you mean ‘xQueueReceive’? [-Wimplicit-function-declaration]
   31 | #define xQueueReceive( xQueue, pvBuffer, xTicksToWait ) xQueueGenericReceive( ( xQueue ), ( pvBuffer ), ( xTicksToWait ), pdFALSE )
      |                                                         ^~~~~~~~~~~~~~~~~~~~
main.c:14:6: note: in expansion of macro ‘xQueueReceive’
   14 |  if( xQueueReceive( xTestQueue, &xData, xTimeToBlock ) != errQUEUE_EMPTY )
      |      ^~~~~~~~~~~~~
heap2.c: In function ‘prvHeapInit’:
heap2.c:62:31: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
   62 |  pucAlignedHeap = (uint8_t*)(((portPOINTER_SIZE_TYPE)&ucHeap[portBYTE_ALIGNMENT])&(~((portPOINTER_SIZE_TYPE)portBYTE_ALIGNMENT_MASK ) ) );
      |                               ^
common.c:2:6: warning: conflicting types for built-in function ‘memcpy’; expected ‘void *(void *, const void *, long unsigned int)’ [-Wbuiltin-declaration-mismatch]
    2 | void memcpy(char * des , char * src, int number)
      |      ^~~~~~
common.c:2:1: note: ‘memcpy’ is declared in header ‘<string.h>’
    1 | #include "common.h"
  +++ |+#include <string.h>
    2 | void memcpy(char * des , char * src, int number)
queue2.c: In function ‘xQueueGenericReset’:
queue2.c:40:9: warning: implicit declaration of function ‘xTaskRemoveFromEventList’ [-Wimplicit-function-declaration]
   40 |     if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
      |         ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from queue2.c:4:
queue2.h:17:25: warning: implicit declaration of function ‘vPortYield’ [-Wimplicit-function-declaration]
   17 | #define portYIELD()     vPortYield()
      |                         ^~~~~~~~~~
queue2.h:16:30: note: in expansion of macro ‘portYIELD’
   16 | #define portYIELD_WITHIN_API portYIELD
      |                              ^~~~~~~~~
queue2.c:7:42: note: in expansion of macro ‘portYIELD_WITHIN_API’
    7 | #define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
      |                                          ^~~~~~~~~~~~~~~~~~~~
queue2.c:42:6: note: in expansion of macro ‘queueYIELD_IF_USING_PREEMPTION’
   42 |      queueYIELD_IF_USING_PREEMPTION();
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
queue2.c:57:4: warning: implicit declaration of function ‘vListInitialise’ [-Wimplicit-function-declaration]
   57 |    vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
      |    ^~~~~~~~~~~~~~~
queue2.c: In function ‘xQueueGenericCreate’:
queue2.c:100:29: warning: implicit declaration of function ‘pvPortMalloc’ [-Wimplicit-function-declaration]
  100 |  pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
      |                             ^~~~~~~~~~~~
queue2.c:100:15: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  100 |  pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
      |               ^
queue2.c: In function ‘vQueueAddToRegistry’:
queue2.c:158:4: warning: implicit declaration of function ‘traceQUEUE_REGISTRY_ADD’ [-Wimplicit-function-declaration]
  158 |    traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
      |    ^~~~~~~~~~~~~~~~~~~~~~~
queue2.c: In function ‘prvCopyDataToQueue’:
queue2.c:191:12: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  191 |   ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0. */
      |            ^~~~~~
queue2.c:191:12: warning: incompatible implicit declaration of built-in function ‘memcpy’
queue2.c:7:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
    6 | #include "time.h"
  +++ |+#include <string.h>
    7 | #define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
queue2.c:204:12: warning: incompatible implicit declaration of built-in function ‘memcpy’
  204 |   ( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
      |            ^~~~~~
queue2.c:204:12: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
In file included from queue2.c:4:
queue2.c: In function ‘xQueueGenericSend’:
queue2.h:26:34: warning: implicit declaration of function ‘vTaskExitCritical’ [-Wimplicit-function-declaration]
   26 | #define portEXIT_CRITICAL()      vTaskExitCritical()
      |                                  ^~~~~~~~~~~~~~~~~
queue2.h:21:31: note: in expansion of macro ‘portEXIT_CRITICAL’
   21 | #define taskEXIT_CRITICAL()   portEXIT_CRITICAL()
      |                               ^~~~~~~~~~~~~~~~~
queue2.c:367:5: note: in expansion of macro ‘taskEXIT_CRITICAL’
  367 |     taskEXIT_CRITICAL();
      |     ^~~~~~~~~~~~~~~~~
queue2.c:380:6: warning: implicit declaration of function ‘traceQUEUE_SEND_FAILED’ [-Wimplicit-function-declaration]
  380 |      traceQUEUE_SEND_FAILED( pxQueue );
      |      ^~~~~~~~~~~~~~~~~~~~~~
queue2.c:387:6: warning: implicit declaration of function ‘vTaskSetTimeOutState’ [-Wimplicit-function-declaration]
  387 |      vTaskSetTimeOutState( &xTimeOut );
      |      ^~~~~~~~~~~~~~~~~~~~
queue2.c:402:3: warning: implicit declaration of function ‘vTaskSuspendAll’ [-Wimplicit-function-declaration]
  402 |   vTaskSuspendAll();
      |   ^~~~~~~~~~~~~~~
queue2.c:403:3: warning: implicit declaration of function ‘prvLockQueue’ [-Wimplicit-function-declaration]
  403 |   prvLockQueue( pxQueue );
      |   ^~~~~~~~~~~~
queue2.c:406:7: warning: implicit declaration of function ‘xTaskCheckForTimeOut’ [-Wimplicit-function-declaration]
  406 |   if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
      |       ^~~~~~~~~~~~~~~~~~~~
queue2.c:408:8: warning: implicit declaration of function ‘prvIsQueueFull’ [-Wimplicit-function-declaration]
  408 |    if( prvIsQueueFull( pxQueue ) != pdFALSE )
      |        ^~~~~~~~~~~~~~
queue2.c:410:5: warning: implicit declaration of function ‘traceBLOCKING_ON_QUEUE_SEND’ [-Wimplicit-function-declaration]
  410 |     traceBLOCKING_ON_QUEUE_SEND( pxQueue );
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~
queue2.c:411:5: warning: implicit declaration of function ‘vTaskPlaceOnEventList’ [-Wimplicit-function-declaration]
  411 |     vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
      |     ^~~~~~~~~~~~~~~~~~~~~
queue2.c:418:5: warning: implicit declaration of function ‘prvUnlockQueue’ [-Wimplicit-function-declaration]
  418 |     prvUnlockQueue( pxQueue );
      |     ^~~~~~~~~~~~~~
queue2.c:425:9: warning: implicit declaration of function ‘xTaskResumeAll’ [-Wimplicit-function-declaration]
  425 |     if( xTaskResumeAll() == pdFALSE )
      |         ^~~~~~~~~~~~~~
queue2.c: In function ‘prvCopyDataFromQueue’:
queue2.c:467:12: warning: incompatible implicit declaration of built-in function ‘memcpy’
  467 |   ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0. */
      |            ^~~~~~
queue2.c:467:12: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
queue2.c: In function ‘xQueueGenericReceive’:
queue2.c:486:2: warning: implicit declaration of function ‘configASSERT’ [-Wimplicit-function-declaration]
  486 |  configASSERT( pxQueue );
      |  ^~~~~~~~~~~~
In file included from queue2.c:4:
queue2.h:23:34: warning: implicit declaration of function ‘vTaskEnterCritical’ [-Wimplicit-function-declaration]
   23 | #define portENTER_CRITICAL()     vTaskEnterCritical()
      |                                  ^~~~~~~~~~~~~~~~~~
queue2.h:20:31: note: in expansion of macro ‘portENTER_CRITICAL’
   20 | #define taskENTER_CRITICAL()  portENTER_CRITICAL()
      |                               ^~~~~~~~~~~~~~~~~~
queue2.c:500:3: note: in expansion of macro ‘taskENTER_CRITICAL’
  500 |   taskENTER_CRITICAL();
      |   ^~~~~~~~~~~~~~~~~~
queue2.c:514:6: warning: implicit declaration of function ‘traceQUEUE_RECEIVE’ [-Wimplicit-function-declaration]
  514 |      traceQUEUE_RECEIVE( pxQueue );
      |      ^~~~~~~~~~~~~~~~~~
queue2.c:552:6: warning: implicit declaration of function ‘traceQUEUE_PEEK’ [-Wimplicit-function-declaration]
  552 |      traceQUEUE_PEEK( pxQueue );
      |      ^~~~~~~~~~~~~~~
queue2.c:588:6: warning: implicit declaration of function ‘traceQUEUE_RECEIVE_FAILED’ [-Wimplicit-function-declaration]
  588 |      traceQUEUE_RECEIVE_FAILED( pxQueue );
      |      ^~~~~~~~~~~~~~~~~~~~~~~~~
queue2.c:616:8: warning: implicit declaration of function ‘prvIsQueueEmpty’ [-Wimplicit-function-declaration]
  616 |    if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
      |        ^~~~~~~~~~~~~~~
queue2.c:618:5: warning: implicit declaration of function ‘traceBLOCKING_ON_QUEUE_RECEIVE’ [-Wimplicit-function-declaration]
  618 |     traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
task.c: In function ‘prvInitialiseTCBVariables’:
task.c:41:4: warning: implicit declaration of function ‘mtCOVERAGE_TEST_MARKER’ [-Wimplicit-function-declaration]
   41 |    mtCOVERAGE_TEST_MARKER();
      |    ^~~~~~~~~~~~~~~~~~~~~~
task.c:68:2: warning: implicit declaration of function ‘vListInitialiseItem’ [-Wimplicit-function-declaration]
   68 |  vListInitialiseItem( &( pxTCB->xGenericListItem ) );
      |  ^~~~~~~~~~~~~~~~~~~
task.c:73:2: warning: implicit declaration of function ‘listSET_LIST_ITEM_OWNER’ [-Wimplicit-function-declaration]
   73 |  listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
      |  ^~~~~~~~~~~~~~~~~~~~~~~
task.c:76:2: warning: implicit declaration of function ‘listSET_LIST_ITEM_VALUE’ [-Wimplicit-function-declaration]
   76 |  listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
      |  ^~~~~~~~~~~~~~~~~~~~~~~
In file included from task.h:1,
                 from task.c:1:
task.c: In function ‘pxPortInitialiseStack’:
common.h:47:26: error: ‘uint64_t’ undeclared (first use in this function); did you mean ‘uint32_t’?
   47 |  #define portSTACK_TYPE  uint64_t
      |                          ^~~~~~~~
task.c:137:19: note: in expansion of macro ‘portSTACK_TYPE’
  137 |  *pxTopOfStack = (portSTACK_TYPE)pxCode;   /* Start address */
      |                   ^~~~~~~~~~~~~~
common.h:47:26: note: each undeclared identifier is reported only once for each function it appears in
   47 |  #define portSTACK_TYPE  uint64_t
      |                          ^~~~~~~~
task.c:137:19: note: in expansion of macro ‘portSTACK_TYPE’
  137 |  *pxTopOfStack = (portSTACK_TYPE)pxCode;   /* Start address */
      |                   ^~~~~~~~~~~~~~
task.c:137:34: error: expected ‘;’ before ‘pxCode’
  137 |  *pxTopOfStack = (portSTACK_TYPE)pxCode;   /* Start address */
      |                                  ^~~~~~
      |                                  ;
task.c:139:34: error: expected ‘;’ before ‘pvParameters’
  139 |  *pxTopOfStack = (portSTACK_TYPE)pvParameters; /* Register a0 */
      |                                  ^~~~~~~~~~~~
      |                                  ;
task.c:141:34: error: expected ‘;’ before ‘tp’
  141 |  *pxTopOfStack = (portSTACK_TYPE)tp; /* Register thread pointer */
      |                                  ^~
      |                                  ;
task.c:143:34: error: expected ‘;’ before ‘prvTaskExitError’
  143 |  *pxTopOfStack = (portSTACK_TYPE)prvTaskExitError; /* Register ra */
      |                                  ^~~~~~~~~~~~~~~~
      |                                  ;
task.c: At top level:
task.c:163: warning: "prvAddTaskToReadyList" redefined
  163 | #define prvAddTaskToReadyList( pxTCB ) vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xGenericListItem )
      | 
In file included from task.c:1:
task.h:92: note: this is the location of the previous definition
   92 | #define prvAddTaskToReadyList( pxTCB )                \
      | 
task.c: In function ‘prvAllocateTCBAndStack’:
task.c:197:31: warning: implicit declaration of function ‘pvPortMallocAligned’ [-Wimplicit-function-declaration]
  197 |   pxStack = ( StackType_t * ) pvPortMallocAligned( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ), puxStackBuffer ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
      |                               ^~~~~~~~~~~~~~~~~~~
task.c:197:13: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  197 |   pxStack = ( StackType_t * ) pvPortMallocAligned( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ), puxStackBuffer ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
      |             ^
task.c:203:27: warning: implicit declaration of function ‘pvPortMalloc’ [-Wimplicit-function-declaration]
  203 |    pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
      |                           ^~~~~~~~~~~~
task.c:203:15: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  203 |    pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
      |               ^
task.c:214:5: warning: implicit declaration of function ‘vPortFree’ [-Wimplicit-function-declaration]
  214 |     vPortFree( pxStack );
      |     ^~~~~~~~~
In file included from task.h:3,
                 from task.c:1:
task.c: In function ‘xTaskGenericCreate’:
queue2.h:23:34: warning: implicit declaration of function ‘vTaskEnterCritical’ [-Wimplicit-function-declaration]
   23 | #define portENTER_CRITICAL()     vTaskEnterCritical()
      |                                  ^~~~~~~~~~~~~~~~~~
queue2.h:20:31: note: in expansion of macro ‘portENTER_CRITICAL’
   20 | #define taskENTER_CRITICAL()  portENTER_CRITICAL()
      |                               ^~~~~~~~~~~~~~~~~~
task.c:337:3: note: in expansion of macro ‘taskENTER_CRITICAL’
  337 |   taskENTER_CRITICAL();
      |   ^~~~~~~~~~~~~~~~~~
task.c:351:6: warning: implicit declaration of function ‘prvInitialiseTaskLists’; did you mean ‘prvInitialiseTCBVariables’? [-Wimplicit-function-declaration]
  351 |      prvInitialiseTaskLists();
      |      ^~~~~~~~~~~~~~~~~~~~~~
      |      prvInitialiseTCBVariables
task.c:388:4: warning: implicit declaration of function ‘traceTASK_CREATE’ [-Wimplicit-function-declaration]
  388 |    traceTASK_CREATE( pxNewTCB );
      |    ^~~~~~~~~~~~~~~~
task.c:163:40: warning: implicit declaration of function ‘vListInsertEnd’ [-Wimplicit-function-declaration]
  163 | #define prvAddTaskToReadyList( pxTCB ) vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xGenericListItem )
      |                                        ^~~~~~~~~~~~~~
task.c:390:4: note: in expansion of macro ‘prvAddTaskToReadyList’
  390 |    prvAddTaskToReadyList(pxNewTCB);
      |    ^~~~~~~~~~~~~~~~~~~~~
task.c:390:35: error: expected ‘)’ before ‘;’ token
  390 |    prvAddTaskToReadyList(pxNewTCB);
      |                                   ^
task.c:393:28: error: expected ‘;’ before ‘}’ token
  393 |    portSETUP_TCB(pxNewTCB);
      |                            ^
      |                            ;
  394 |   }
      |   ~                         
In file included from task.h:3,
                 from task.c:1:
queue2.h:26:34: warning: implicit declaration of function ‘vTaskExitCritical’ [-Wimplicit-function-declaration]
   26 | #define portEXIT_CRITICAL()      vTaskExitCritical()
      |                                  ^~~~~~~~~~~~~~~~~
queue2.h:21:31: note: in expansion of macro ‘portEXIT_CRITICAL’
   21 | #define taskEXIT_CRITICAL()   portEXIT_CRITICAL()
      |                               ^~~~~~~~~~~~~~~~~
task.c:395:3: note: in expansion of macro ‘taskEXIT_CRITICAL’
  395 |   taskEXIT_CRITICAL();
      |   ^~~~~~~~~~~~~~~~~
task.c:400:3: warning: implicit declaration of function ‘traceTASK_CREATE_FAILED’ [-Wimplicit-function-declaration]
  400 |   traceTASK_CREATE_FAILED();
      |   ^~~~~~~~~~~~~~~~~~~~~~~
In file included from task.h:3,
                 from task.c:1:
queue2.h:17:25: warning: implicit declaration of function ‘vPortYield’ [-Wimplicit-function-declaration]
   17 | #define portYIELD()     vPortYield()
      |                         ^~~~~~~~~~
queue2.h:16:30: note: in expansion of macro ‘portYIELD’
   16 | #define portYIELD_WITHIN_API portYIELD
      |                              ^~~~~~~~~
task.h:90:41: note: in expansion of macro ‘portYIELD_WITHIN_API’
   90 | #define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
      |                                         ^~~~~~~~~~~~~~~~~~~~
task.c:411:5: note: in expansion of macro ‘taskYIELD_IF_USING_PREEMPTION’
  411 |     taskYIELD_IF_USING_PREEMPTION();
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
task.c: In function ‘vTaskSwitchContext’:
task.c:440:3: warning: implicit declaration of function ‘traceTASK_SWITCHED_OUT’ [-Wimplicit-function-declaration]
  440 |   traceTASK_SWITCHED_OUT();
      |   ^~~~~~~~~~~~~~~~~~~~~~
task.c:470:3: warning: implicit declaration of function ‘taskCHECK_FOR_STACK_OVERFLOW’ [-Wimplicit-function-declaration]
  470 |   taskCHECK_FOR_STACK_OVERFLOW();
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
task.c:153:9: warning: implicit declaration of function ‘configASSERT’ [-Wimplicit-function-declaration]
  153 |         configASSERT( uxTopReadyPriority );                                                         \
      |         ^~~~~~~~~~~~
task.c:474:3: note: in expansion of macro ‘taskSELECT_HIGHEST_PRIORITY_TASK’
  474 |   taskSELECT_HIGHEST_PRIORITY_TASK();
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
task.c:475:3: warning: implicit declaration of function ‘traceTASK_SWITCHED_IN’ [-Wimplicit-function-declaration]
  475 |   traceTASK_SWITCHED_IN();
      |   ^~~~~~~~~~~~~~~~~~~~~
task.c: In function ‘xTaskRemoveFromEventList’:
task.c:492:11: warning: implicit declaration of function ‘uxListRemove’ [-Wimplicit-function-declaration]
  492 |  ( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
      |           ^~~~~~~~~~~~
task.c:497:42: error: expected ‘)’ before ‘;’ token
  497 |   prvAddTaskToReadyList( pxUnblockedTCB );
      |                                          ^
task.c:497:43: error: expected ‘;’ before ‘}’ token
  497 |   prvAddTaskToReadyList( pxUnblockedTCB );
      |                                           ^
      |                                           ;
  498 | 
  499 |  }
      |  ~                                         
task.c: In function ‘vTaskStartScheduler’:
task.c:551:16: warning: implicit declaration of function ‘xTimerCreateTimerTask’ [-Wimplicit-function-declaration]
  551 |      xReturn = xTimerCreateTimerTask();
      |                ^~~~~~~~~~~~~~~~~~~~~
task.c:553:6: warning: implicit declaration of function ‘xPortStartScheduler’; did you mean ‘vTaskStartScheduler’? [-Wimplicit-function-declaration]
  553 |  if( xPortStartScheduler() != pdFALSE )
      |      ^~~~~~~~~~~~~~~~~~~
      |      vTaskStartScheduler
task.c: At top level:
task.c:565:6: warning: conflicting types for ‘vTaskEnterCritical’
  565 | void vTaskEnterCritical( void )
      |      ^~~~~~~~~~~~~~~~~~
In file included from task.h:3,
                 from task.c:1:
queue2.h:23:34: note: previous implicit declaration of ‘vTaskEnterCritical’ was here
   23 | #define portENTER_CRITICAL()     vTaskEnterCritical()
      |                                  ^~~~~~~~~~~~~~~~~~
queue2.h:20:31: note: in expansion of macro ‘portENTER_CRITICAL’
   20 | #define taskENTER_CRITICAL()  portENTER_CRITICAL()
      |                               ^~~~~~~~~~~~~~~~~~
task.c:337:3: note: in expansion of macro ‘taskENTER_CRITICAL’
  337 |   taskENTER_CRITICAL();
      |   ^~~~~~~~~~~~~~~~~~
task.c: In function ‘vTaskEnterCritical’:
task.c:567:3: warning: implicit declaration of function ‘portDISABLE_INTERRUPTS’ [-Wimplicit-function-declaration]
  567 |   portDISABLE_INTERRUPTS();
      |   ^~~~~~~~~~~~~~~~~~~~~~
task.c:581:5: warning: implicit declaration of function ‘portASSERT_IF_IN_ISR’ [-Wimplicit-function-declaration]
  581 |     portASSERT_IF_IN_ISR();
      |     ^~~~~~~~~~~~~~~~~~~~
task.c: At top level:
task.c:589:7: warning: conflicting types for ‘vTaskExitCritical’
  589 |  void vTaskExitCritical( void )
      |       ^~~~~~~~~~~~~~~~~
In file included from task.h:3,
                 from task.c:1:
queue2.h:26:34: note: previous implicit declaration of ‘vTaskExitCritical’ was here
   26 | #define portEXIT_CRITICAL()      vTaskExitCritical()
      |                                  ^~~~~~~~~~~~~~~~~
queue2.h:21:31: note: in expansion of macro ‘portEXIT_CRITICAL’
   21 | #define taskEXIT_CRITICAL()   portEXIT_CRITICAL()
      |                               ^~~~~~~~~~~~~~~~~
task.c:395:3: note: in expansion of macro ‘taskEXIT_CRITICAL’
  395 |   taskEXIT_CRITICAL();
      |   ^~~~~~~~~~~~~~~~~
task.c: In function ‘vTaskExitCritical’:
task.c:599:6: warning: implicit declaration of function ‘portENABLE_INTERRUPTS’ [-Wimplicit-function-declaration]
  599 |      portENABLE_INTERRUPTS();
      |      ^~~~~~~~~~~~~~~~~~~~~
time.c: In function ‘vPortSysTickHandler’:
time.c:56:9: warning: implicit declaration of function ‘xTaskIncrementTick’ [-Wimplicit-function-declaration]
   56 |     if( xTaskIncrementTick() != pdFALSE )
      |         ^~~~~~~~~~~~~~~~~~
time.c:58:9: warning: implicit declaration of function ‘vTaskSwitchContext’ [-Wimplicit-function-declaration]
   58 |         vTaskSwitchContext();
      |         ^~~~~~~~~~~~~~~~~~
time.c: In function ‘prvCheckForValidListAndQueue’:
time.c:65:7: warning: implicit declaration of function ‘vListInitialise’ [-Wimplicit-function-declaration]
   65 |       vListInitialise( &xActiveTimerList1 );
      |       ^~~~~~~~~~~~~~~
time.c:69:21: warning: implicit declaration of function ‘xQueueCreate’ [-Wimplicit-function-declaration]
   69 |       xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage_t ) );
      |                     ^~~~~~~~~~~~
time.c:69:51: error: ‘configTIMER_QUEUE_LENGTH’ undeclared (first use in this function); did you mean ‘configUSE_QUEUE_SETS’?
   69 |       xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage_t ) );
      |                                                   ^~~~~~~~~~~~~~~~~~~~~~~~
      |                                                   configUSE_QUEUE_SETS
time.c:69:51: note: each undeclared identifier is reported only once for each function it appears in
time.c:73:15: warning: implicit declaration of function ‘vQueueAddToRegistry’ [-Wimplicit-function-declaration]
   73 |               vQueueAddToRegistry( xTimerQueue, "TmrQ" );
      |               ^~~~~~~~~~~~~~~~~~~
time.c: In function ‘xTimerCreate’:
time.c:87:34: warning: implicit declaration of function ‘pvPortMalloc’ [-Wimplicit-function-declaration]
   87 |       pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) );
      |                                  ^~~~~~~~~~~~
time.c:87:20: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
   87 |       pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) );
      |                    ^
time.c:100:11: warning: implicit declaration of function ‘vListInitialiseItem’ [-Wimplicit-function-declaration]
  100 |           vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
      |           ^~~~~~~~~~~~~~~~~~~
time.c:102:11: warning: implicit declaration of function ‘traceTIMER_CREATE’ [-Wimplicit-function-declaration]
  102 |           traceTIMER_CREATE( pxNewTimer );
      |           ^~~~~~~~~~~~~~~~~
time.c:106:11: warning: implicit declaration of function ‘traceTIMER_CREATE_FAILED’ [-Wimplicit-function-declaration]
  106 |           traceTIMER_CREATE_FAILED();
      |           ^~~~~~~~~~~~~~~~~~~~~~~~
time.c: In function ‘xTimerGenericCommand’:
time.c:115:24: error: ‘pdFAIL’ undeclared (first use in this function)
  115 |   BaseType_t xReturn = pdFAIL;
      |                        ^~~~~~
time.c:124:24: error: ‘tmrFIRST_FROM_ISR_COMMAND’ undeclared (first use in this function)
  124 |       if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
      |                        ^~~~~~~~~~~~~~~~~~~~~~~~~
time.c:126:15: warning: implicit declaration of function ‘xTaskGetSchedulerState’ [-Wimplicit-function-declaration]
  126 |           if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
      |               ^~~~~~~~~~~~~~~~~~~~~~
time.c:126:43: error: ‘taskSCHEDULER_RUNNING’ undeclared (first use in this function)
  126 |           if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
      |                                           ^~~~~~~~~~~~~~~~~~~~~
time.c:128:25: warning: implicit declaration of function ‘xQueueSendToBack’ [-Wimplicit-function-declaration]
  128 |               xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
      |                         ^~~~~~~~~~~~~~~~
time.c:132:67: error: ‘tmrNO_DELAY’ undeclared (first use in this function)
  132 |               xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
      |                                                                   ^~~~~~~~~~~
time.c:137:21: warning: implicit declaration of function ‘xQueueSendToBackFromISR’ [-Wimplicit-function-declaration]
  137 |           xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
      |                     ^~~~~~~~~~~~~~~~~~~~~~~
time.c: In function ‘xTimerCreateTimerTask’:
time.c:145:26: error: ‘pdFAIL’ undeclared (first use in this function)
  145 |     BaseType_t xReturn = pdFAIL;
      |                          ^~~~~~
time.c:149:17: warning: implicit declaration of function ‘xTaskCreate’; did you mean ‘xTimerCreate’? [-Wimplicit-function-declaration]
  149 |       xReturn = xTaskCreate( prvTimerTask, "Tmr Svc", ( uint16_t ) configTIMER_TASK_STACK_DEPTH, NULL, ( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT, NULL);
      |                 ^~~~~~~~~~~
      |                 xTimerCreate
time.c:149:30: error: ‘prvTimerTask’ undeclared (first use in this function)
  149 |       xReturn = xTaskCreate( prvTimerTask, "Tmr Svc", ( uint16_t ) configTIMER_TASK_STACK_DEPTH, NULL, ( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT, NULL);
      |                              ^~~~~~~~~~~~
time.c:149:68: error: ‘configTIMER_TASK_STACK_DEPTH’ undeclared (first use in this function)
  149 |       xReturn = xTaskCreate( prvTimerTask, "Tmr Svc", ( uint16_t ) configTIMER_TASK_STACK_DEPTH, NULL, ( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT, NULL);
      |                                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
time.c:149:122: error: ‘configTIMER_TASK_PRIORITY’ undeclared (first use in this function)
  149 |       xReturn = xTaskCreate( prvTimerTask, "Tmr Svc", ( uint16_t ) configTIMER_TASK_STACK_DEPTH, NULL, ( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT, NULL);
      |                                                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~
time.c:149:152: error: ‘portPRIVILEGE_BIT’ undeclared (first use in this function)
  149 |       xReturn = xTaskCreate( prvTimerTask, "Tmr Svc", ( uint16_t ) configTIMER_TASK_STACK_DEPTH, NULL, ( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT, NULL);
      |                                                                                                                                                        ^~~~~~~~~~~~~~~~~
make: *** [Makefile:2: all] Error 1
